/*
 * Picker Plugin
 * @author Ben Plum
 * @version 0.3.3
 *
 * Copyright Â© 2013 Ben Plum <mr@benplum.com>
 * Released under the MIT License <http://www.opensource.org/licenses/mit-license.php>
 */
 
if(jQuery)(function(c){function m(a){a=c.extend({},n,a);for(var b=c(this),f=0,h=b.length;f<h;f++){var e=b.eq(f),d=a;if(!e.data("picker")){var d=c.extend({},d,e.data("picker-options")),p=c("label[for="+e.attr("id")+"]"),q=e.attr("type"),g="picker-"+("radio"==q?"radio":"checkbox"),l=e.attr("name"),k='<div class="picker-handle"><div class="picker-flag" /></div>';d.toggle&&(g+=" picker-toggle",k='<span class="picker-toggle-label on">'+d.labelOn+'</span><span class="picker-toggle-label off">'+d.labelOff+"</span>"+ k);e.addClass("picker-element");p.wrap('<div class="picker '+g+" "+d.customClass+'" />').before(k).addClass("picker-label");var g=p.parents(".picker"),k=g.find(".picker-handle"),m=g.find(".picker-toggle-label");e.is(":checked")&&g.addClass("checked");e.is(":disabled")&&g.addClass("disabled");c.extend(d,{$picker:g,$input:e,$handle:k,$label:p,$labels:m,group:l,isRadio:"radio"==q,isCheckbox:"checkbox"==q});e.on("focus.picker",d,s).on("blur.picker",d,t).on("change.picker",d,u).on("deselect.picker",d, r);g.on("click.picker",d,v).data("picker",d)}}return b}function v(a){a.preventDefault();a.stopPropagation();var b=a.data;c(a.target).is(b.$input)||b.$input.trigger("click")}function u(a){a.stopPropagation();var b=a.data;if(!b.$input.is(":disabled")){var c=b.$input.is(":checked");b.isCheckbox?c?h(a,!0):r(a,!0):c&&h(a)}}function h(a,b){var f=a.data;"undefined"!==typeof f.group&&f.isRadio&&c('input[name="'+f.group+'"]').not(f.$input).trigger("deselect");f.$picker.addClass("checked")}function r(a,b){a.data.$picker.removeClass("checked")} function s(a){a.data.$picker.addClass("focus")}function t(a){a.data.$picker.removeClass("focus")}var n={customClass:"",toggle:!1,labelOn:"ON",labelOff:"OFF"},l={defaults:function(a){n=c.extend(n,a||{});return c(this)},disable:function(){return c(this).each(function(a){a=c(this);var b=a.parent(".picker");a.prop("disabled",!0);b.addClass("disabled")})},enable:function(){return c(this).each(function(a){a=c(this);var b=a.parent(".picker");a.prop("disabled",!1);b.removeClass("disabled")})},destroy:function(){return c(this).each(function(a){a= c(this);var b=a.parent(".picker"),f=b.find(".picker-handle"),h=b.find(".picker-toggle-label"),e=c("label[for="+a.attr("id")+"]");b.off(".picker");f.remove();h.remove();a.off(".picker").removeClass("picker-element").unwrap();e.removeClass("picker-label")})},update:function(){return c(this).each(function(a){a=c(this);var b=a.parent(".picker").data("picker");a.is(":disabled")||(a.is(":checked")?h({data:b},!0):r({data:b},!0))})}};c.fn.picker=function(a){return l[a]?l[a].apply(this,Array.prototype.slice.call(arguments, 1)):"object"!==typeof a&&a?this:m.apply(this,arguments)}})(jQuery);